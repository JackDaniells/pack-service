// Code generated by mockery v2.33.3. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// PackHandler is an autogenerated mock type for the PackHandler type
type PackHandler struct {
	mock.Mock
}

// Calculate provides a mock function with given fields: response, request
func (_m *PackHandler) Calculate(response http.ResponseWriter, request *http.Request) {
	_m.Called(response, request)
}

// Create provides a mock function with given fields: response, request
func (_m *PackHandler) Create(response http.ResponseWriter, request *http.Request) {
	_m.Called(response, request)
}

// Remove provides a mock function with given fields: response, request
func (_m *PackHandler) Remove(response http.ResponseWriter, request *http.Request) {
	_m.Called(response, request)
}

// NewPackHandler creates a new instance of PackHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPackHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *PackHandler {
	mock := &PackHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
