// Code generated by mockery v2.33.3. DO NOT EDIT.

package mocks

import (
	entity "github.com/JackDaniells/pack-service/domain/entity"
	mock "github.com/stretchr/testify/mock"
)

// PackService is an autogenerated mock type for the PackService type
type PackService struct {
	mock.Mock
}

// Calculate provides a mock function with given fields: orderItems
func (_m *PackService) Calculate(orderItems int) []entity.Pack {
	ret := _m.Called(orderItems)

	var r0 []entity.Pack
	if rf, ok := ret.Get(0).(func(int) []entity.Pack); ok {
		r0 = rf(orderItems)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Pack)
		}
	}

	return r0
}

// NewPackService creates a new instance of PackService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPackService(t interface {
	mock.TestingT
	Cleanup(func())
}) *PackService {
	mock := &PackService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
