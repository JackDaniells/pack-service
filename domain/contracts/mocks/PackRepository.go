// Code generated by mockery v2.33.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PackRepository is an autogenerated mock type for the PackRepository type
type PackRepository struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *PackRepository) GetAll() []int {
	ret := _m.Called()

	var r0 []int
	if rf, ok := ret.Get(0).(func() []int); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]int)
		}
	}

	return r0
}

// NewPackRepository creates a new instance of PackRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPackRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *PackRepository {
	mock := &PackRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
